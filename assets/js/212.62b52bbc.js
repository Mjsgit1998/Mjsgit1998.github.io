(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{524:function(e,t,n){"use strict";n.r(t);var s=n(7),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("nuxt 学习笔记")]),e._v(" "),t("p",[e._v("安装 npx create-nuxt-app xxx")]),e._v(" "),t("p",[e._v("开发 npm run dev")]),e._v(" "),t("p",[e._v("打包 npm run build")]),e._v(" "),t("p",[e._v("​ npm run start")]),e._v(" "),t("p",[e._v("nuxt.config.js 文件修改过以后要重新启动项目。")]),e._v(" "),t("p",[e._v("生命周期：运行在服务端的钩子函数：")]),e._v(" "),t("p",[e._v("​ 一、 nuxtServerInit（初始化东西到 store 中）")]),e._v(" "),t("p",[e._v("​ 二、 middleware(中间件)")]),e._v(" "),t("p",[e._v("​ 中间件：middleware 目录下的 auth.js 中暴露出函数")]),e._v(" "),t("p",[e._v("​ export default （）=》{}")]),e._v(" "),t("p",[e._v("​ 方式 1：在全局配置 nuxt.config.js 文件中，配置")]),e._v(" "),t("p",[e._v("​ router:{middleware:'auth'}")]),e._v(" "),t("p",[e._v("方式 2：在布局层级 layout 运行 middleware:'auth'")]),e._v(" "),t("p",[e._v("​ 方式 3：在页面层级 pages 运行 middleware(){console.log('middleware pages'); }")]),e._v(" "),t("p",[e._v("​ 三、 validate（校验参数）")]),e._v(" "),t("p",[e._v("​ 运行在 pages 层级，有 return 返回值")]),e._v(" "),t("p",[e._v("​")]),e._v(" "),t("p",[e._v("validate(参数){\nconsole.log('validate pages');\nreturn true;\n}")]),e._v(" "),t("p",[e._v("​ 返回 true 则正常，返回 false 报错。自动跳转错误页面")]),e._v(" "),t("p",[e._v("​ 四、asyncData 和 fetch （pages 层级）")]),e._v(" "),t("p",[e._v("运行在客户端的生命周期：vue 的生命周期函数。 window 来访问 bom，this 指向组件本身。")]),e._v(" "),t("p",[e._v("nuxt 约定式路由：展示区："),t("nuxt")],1),e._v(" "),t("p",[e._v("​ 不用有专门的 router.js 文件，直接写路由跳转就行。")]),e._v(" "),t("p",[e._v("​ 1. "),t("nuxt-link",{attrs:{to:"/goods"}})],1),e._v(" "),t("p",[e._v("​ 2. "),t("nuxt-link",{attrs:{to:"/goods/detail"}})],1),e._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("p",[e._v("动态路由跳转，在文件夹里面用 _id.vue 的方式来命名文件。")]),e._v(" "),t("p",[e._v("有两种方式来传递参数")])])]),e._v(" "),t("p",[e._v("① "),t("nuxt-link",{attrs:{to:"/goods/2?a=111&b=222"}},[e._v("商品 02")])],1),e._v(" "),t("p",[e._v("②"),t("nuxt-link",{attrs:{to:{name:"goods-id",params:{id:3},query:{a:1111,b:2222}}}},[e._v("商品 03")])],1),e._v(" "),t("p",[e._v("​ name 是路由名，目录名-文件名")]),e._v(" "),t("p",[e._v("​ params 代表 key，要对等文件名")]),e._v(" "),t("p",[e._v("​ query 为传递的参数")]),e._v(" "),t("p",[e._v("展示区的层级控制：")]),e._v(" "),t("p",[e._v("​ pages/一级展示/二级展示")]),e._v(" "),t("p",[e._v("​ /index.vue 表示会在一级展示区展示")]),e._v(" "),t("p",[e._v("​ /index.vue 为空文档的话表示会在二级展示区展示, 代表有默认页，不会寻 找其他页面。")]),e._v(" "),t("p",[e._v("扩展路由的配置：nuxt.config.js 中的 router 对象里，配置扩展路由")]),e._v(" "),t("p",[e._v("​ extendRoutes(routes,resolve){")]),e._v(" "),t("p",[e._v("​ routes.push({")]),e._v(" "),t("p",[e._v("​ name:'home',")]),e._v(" "),t("p",[e._v("​ path:'/index',")]),e._v(" "),t("p",[e._v("​ component:resolve(__dirname,'pages/index.vue')")]),e._v(" "),t("p",[e._v("})\n}")]),e._v(" "),t("p",[e._v("error 页面的配置： 在 layout 层级中创建 error.vue 文件。")]),e._v(" "),t("p",[e._v("​ 在文件中使用 props:['error']来接收错误信息。")]),e._v(" "),t("p",[e._v("配置全局样式并引入 ：在 nuxt.config.js 中找到 css 对象，直接写入路径就可以")]),e._v(" "),t("p",[e._v("​ css: [ 'assets/css/transition.css' ]")]),e._v(" "),t("p",[e._v("设置路由切换动效： 在 page 页面里配置 transition：‘动画名 ’；")]),e._v(" "),t("p",[e._v("​ 在 css 中配置 .动画名-enter-active，.动画名-leave-active{}")]),e._v(" "),t("p",[e._v("​ .动画名-enter，.动画名-leave-active{}")]),e._v(" "),t("p",[e._v("路由守卫：前置和后置")]),e._v(" "),t("p",[e._v("​ middleware（{ store，route，query，params，redirect }）{}")]),e._v(" "),t("p",[e._v("​ 前置：")]),e._v(" "),t("p",[e._v("​ 依赖中间件 middleware，插件")]),e._v(" "),t("p",[e._v("​ 全局守卫：1.nuxt.config 指向 middleware")]),e._v(" "),t("p",[e._v("​ 2. layouts 定义中间件")]),e._v(" "),t("p",[e._v("​ 3.组件独享守卫（在 page 页面中）：middleware")]),e._v(" "),t("p",[e._v("​ 4.在 plugins 文件下创建 router.js 配置插件全局守卫：")]),e._v(" "),t("p",[e._v("​ 后置：")]),e._v(" "),t("p",[e._v("​ 1.在 page 页面使用 vue 的 beforeRouteLeave 钩子")]),e._v(" "),t("p",[e._v("​ 2.在 plugins 文件下创建 router.js 配置插件全局后置守卫")]),e._v(" "),t("p",[e._v("plugins 文件下配置 router.js 文件(要在 nuxt.config.js 中 plugin 里引入)：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\texport default({app,redirect,store,params.query})=>{\n\t\t//app就是vue实例\n\tapp.router.beforeEach((to,from,next)=>{\n      // 全局前置守卫，插件\n      // next(true)/next(false)\n      // 不能next('/login')\n      // 路由强制跳转要使用redirect\n\n      // console.log('路由插件配置   全局前置守卫',to);\n\n      // if(to.path=='/login' || to.path=='/reg'){\n      //   next()\n      // }else{\n      //   redirect('/login')\n      // }\n      next()\n  })\n\n      //全局后置守卫\n      app.router.afterEach((to,from)=>{\n            console.log('路由插件全局后置守卫',to);\n      })\n\n\t}\n")])])]),t("p",[e._v("数据交互：")]),e._v(" "),t("p",[e._v("​ 安装@nuxtjs/axios、@nuxtjs/proxy :")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i @nuxtjs/axios @nuxtjs/proxy --save\n")])])]),t("p",[e._v("在 nuxt.config.js 中的 modules 中配置 modules: [ '@nuxtjs/axios']即可。")]),e._v(" "),t("p",[e._v("在 modules 中配置的模块，在引用时需要用$axios 的方式。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("async asyncData({$axios}){\n     let res = await $axios({url:'/data/list.json'})\n     console.log('读取到的同域静态资源',res.data);\n     return {\n       title:res.data.title\n     }\n    },\nasync fetch({$axios}){\n     let res = await $axios({url:'/data/list.json'})\n     console.log('fetch读取到的同域静态资源',res.data);\n    },\n")])])]),t("p",[e._v("跨域行为的配置：在 nuxt.config.js 中：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("axios:{\n    proxy:true ,//开启跨域行为\n    prefix:''//baseUrl\n  },\n  proxy:{\n    '/api/':{\n      target:'http://localhost:3001',//代理转发的地址\n      changeOrigin:true,\n      pathRewrite:{}\n    }\n  },\n")])])]),t("p",[e._v("axios 的配置：在 plugins 文件中创建 axios.js 文件。")]),e._v(" "),t("p",[e._v("​ nuxt.config.js 中 plugins 中添加{")]),e._v(" "),t("p",[e._v("src:'~/plugins/axios',")]),e._v(" "),t("p",[e._v("ssr:true //服务端渲染")]),e._v(" "),t("p",[e._v("}")]),e._v(" "),t("p",[e._v("​")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export default({$axios,route,store,redirect})=>{\n\n  // 基本配置\n    $axios.defaults.timeout=10000;\n\n      // 请求拦截\n      $axios.onRequest(config=>{\n        console.log('请求拦截');\n\n        config.headers.token='假token'\n        return config;\n      })\n      // 响应拦截\n      $axios.onResponse(res=>{\n        if(res.data.err===2 && route.fullPath !=='/login'){\n          redirect('/login?path='+route.fullPath)\n        }\n\n        return res\n      })\n      // 错误处理\n      $axios.onError(err=>{\n        return err\n      })\n\n}\n")])])]),t("p",[e._v("自定义 loading 页面：")]),e._v(" "),t("p",[e._v("​ 一、在 nuxt.config.js 中设置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" // loading:{\n  //   color:\"#399\",\n  //   height:'3px'\n  // },\n")])])]),t("p",[e._v("二、引入")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" loading:'~/components/loading.vue',\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\x3c!--  --\x3e\n<template>\n <div v-if="loading">\n   loading...\n </div>\n</template>\n\n<script>\nexport default {\n data () {\n  return {\n    loading:false\n  }\n },\n methods:{\n //start 和 finish 方法为nuxt自带，不可改动\n   start(){\n     this.loading = true;\n   },\n   finish(){\n     this.loading = false;\n   }\n }\n}\n<\/script>\n\n\n')])])]),t("p",[t("strong",[e._v("vuex 状态管理")]),e._v("（两种方式）：")]),e._v(" "),t("p",[e._v("一、模块方式。 store 目录下的每个.js 文件会被转换为状态树【指定命名的子模块】index 是根模块")]),e._v(" "),t("p",[e._v("二、classic 方式（不建议使用）： store/index.js 返回创建 vuex.store 实例的方法")]),e._v(" "),t("p",[e._v("模块化：home.js")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export const state=()=>({\n  err:1,\n  data:{}\n})\n\nexport const mutations ={\n  M_updata_home(state,payload){\n      state.err = payload.err;\n      state.data = payload.data;\n\n  }\n}\nexport const actions ={\n  A_updata_home({commit,state},payload){\n    commit('M_updata_home',payload)\n  }\n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import {mapActions,mapGetters,mapState,mapMutations} from 'vuex'\n      ...mapActions('user',['a_update_user']),\n      ...mapMutations('user',['m_update_user']),\n      ...mapMutations(['M_UPDATE_NAV'])\n")])])]),t("p",[e._v("状态持久化 &&token 校验")]),e._v(" "),t("p",[e._v("cookie：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i cookie-universal-nuxt --save\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("modules: [\n    'cookie-universal-nuxt'  //引入模块\n  ],\n")])])]),t("p",[e._v("思想：在登录时同步 vuex 和 cookie，强制刷新后， nuxtServerInit 钩子来取出 cookies，同步 vuex")]),e._v(" "),t("p",[e._v("​ axios 拦截器读取 vuex")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   在登录时同步vuex和cookie:\n\n   login(){\n      this.$axios({\n\t\t\turl:''\n      }).then(res=>{\n        this.$cookies.set('user',res.data);\n        this.$store.commit('user/m_update_user',res.data)\n      })\n    }\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("强制刷新后， nuxtServerInit 钩子来取出cookies，同步vuex\n\nexport const actions={\n  nuxtServerInit(store,{app:{$cookies}}){\n    // console.log(store,context);\n    let user = $cookies.get('user') ? $cookies.get('user'):{err:2,msg:'未登录'}\n    store.commit('user/m_update_user',user)\n  }\n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("同步vuex  axios拦截器读取vuex\n\n $axios.onRequest(config=>{\n    console.log('请求拦截');\n    config.headers.token=store.state.user.token\n    return config;\n   })\n")])])]),t("p",[t("strong",[e._v("引入 element-ui")])]),e._v(" "),t("p",[e._v("创建 element-ui.js 文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i element-ui -S\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 整体引入\nimport ElementUI from 'element-ui'\nVue.use(ElementUI);\n\n// 按需引入\n\n// import {button} from 'element-ui'\n// Vue.use(button)\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nuxt.config.js中配置：\n\ncss: [\n    'element-ui/lib/theme-chalk/index.css'\n  ],\nplugins: [\n    {\n      src:'~/plugins/element-ui',\n      ssr:true\n    }\n  ],\nbuild: {\n    transpile:[/^element-ui/],\n  }\n")])])]),t("p",[t("strong",[e._v("nuxt 定义全局方法：（插件形式）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("plugins: [\n   '引入js文件'\n  ],\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 定义全局方法\n\nimport Vue from 'vue'\n\nlet show =()=> console.log('全局方法show');\n\nVue.prototype.$show=show;\n")])])]),t("p",[t("strong",[e._v("过滤器的引入：直接在上面的全局方法文件中引入")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("全局方法.js中引入：\n\nimport * as _filters from '../assets/script/filter'\n\nObjext.keys(_filters).forEach(key=>Vue.filter(key,_filters[key]));\n")])])]),t("p",[t("strong",[e._v("全局指令")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 全局指令\nimport  direc1 from '../assets/script/directives/direct1'\nimport direc2 from '../assets/script/directives/direct2'\n\nVue.directive('direc1',direc1);\nVue.directive('direc2',direc2);\n")])])]),t("p",[t("strong",[e._v("全局组件")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 全局组件\nimport UcButton from '../components/global/uc-button.vue'\n\nVue.component('uc-button',UcButton)\n")])])]),t("p",[t("strong",[e._v("全局头部 meta 信息的自定义：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" head: {\n    title: process.env.npm_package_name || '统一标题',\n    htmlAttrs: {\n      lang: 'en'\n    },\n    meta: [\n      { charset: 'utf-8' },\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { hid: 'description', name: 'description', content: \t\t\t\t\tprocess.env.npm_package_name_description || '自定义的描述信息' }\n    ],\n    link: [\n      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\n    ]\n  },\n")])])]),t("p",[t("strong",[e._v("单个页面设置头部 meta:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" 钩子函数：\n head(){\n      return this.$seo('标题','内容',[{}])\n    },\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\n// 混入methods,使所有的组件中的methods中都有seo方法\n\nVue.mixin({\n  methods:{\n    $seo(title,content,payload=[]){\n      return{\n        title,\n        meta:[{\n          hid:'description',\n          name:'keywords',\n          content\n        }].concat(payload)\n      }\n    }\n  }\n})\n")])])]),t("p",[t("strong",[e._v("sass 的使用")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i node-sass sass-loader  --save\n\nnpm install sass-loader@7.3.1 node-sass@4.14.1  --save-dev  //安装对应的版本\n")])])]),t("p",[t("strong",[e._v("设置公共 scss 文件")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install @nuxtjs/style-resources --save\n\n modules: [\n    '@nuxtjs/style-resources'\n  ],\n  styleResources:{\n    scss:['./assets/scss/global.scss']\n  }\n")])])]),t("p",[e._v("入口模板 app.html")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<!DOCTYPE html>\n<html {{HTML_ATTRS}}>\n<head {{HEAD_ATTRS}}>\n {{HEAD}}\n</head>\n<body {{BODY_ATTRS}}>\n  {{APP}}\n</body>\n</html>\n")])])]),t("p",[t("strong",[e._v("引入外部资源")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nuxt.config.js:\n\nscript:[\n      {src:'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js'}\n    ],\nlink: [\n      {rel:'stylesheet',href:'https://fonts.googleapis.com/css?family=Roboto'}\n    ]\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("页面中：\n\nhead:{\n\tscript:[\n\t {src:'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js'}\n\t],\n\tlink: [\n      {rel:'stylesheet',href:'https://fonts.googleapis.com/css?family=Roboto'}\n    ]\n}\n")])])]),t("p",[e._v("部署")]),e._v(" "),t("p",[e._v("​ nuxt")]),e._v(" "),t("p",[e._v("​ npm run build 打包")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("需要复制到服务器的文件\n.nuxt\npackage-lock.json\npackage.json\nnuxt.config.json\nstatic\n")])])]),t("p",[t("strong",[e._v("开发端口的配置：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('在package.json中配置\n”config“:{\n\t"nuxt":{\n\t"host":"127.0.0.1",\n\t"port":"1818"\n\t}\n\n},\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);